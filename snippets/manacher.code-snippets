{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "cpp",
		"prefix": "manacher",
		"body": [
			"string manacher(string s){",
			"	int n=s.size();",
			"	string ans="";",
			"	string t="#";",
			"	for(auto it:s){",
			"		t+=it;",
			"		t+='#'; ",
			"	}",
			"	int m=t.size();",
			"	int i=1,cnt=1;",
			"	vector<int> dp(m);",
			"	while(i<m){",
			"		if(i-cnt>=0 && i+cnt<m&& t[i-cnt]==t[i+cnt]){",
			"			cnt++;",
			"		}else{",
			"			dp[i]=cnt-1;",
			"			int ind=i+cnt-1;",
			"			for(int j=i-1;j>i-cnt;j--){",
			"				if(j-dp[j]==i-cnt+1){",
			"					dp[i+i-j]=dp[j];",
			"					ind=i+(i-j);",
			"					break;",
			"				}",
			"				dp[i+i-j]=min(dp[j],j-(i-cnt+1));",
			"			}",
			"			i=max(ind,i+1);",
			"			cnt=dp[i]+1;",
			"		}",
			"	}",
			"	int mx=0;",
			"	for(int i=0;i<m;i++){",
			"		mx=max(mx,dp[i]);",
			"	}",
			"	for(int i=0;i<m;i++){",
			"		if(mx==dp[i]){",
			"			for(int j=i-dp[i];j<=i+dp[i];j++){",
			"				if(t[j]!='#')ans+=t[j];",
			"			} ",
			"			break;",
			"		}",
			"	} ",
			"	return ans;",
			"}",
			
		],
		"description": "Log output to console"
	}
}