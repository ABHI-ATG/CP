{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "cpp",
		"prefix": "squareRoot",
		"body": [
			"int n = 100005;",
			"int Sq = 500;",
			"vector<int> v(Sq);",
			"void update(vector<int> &arr, int n, int i, int val){",
			"	int sq = sqrt(n);",
			"	v[i / sq] -= arr[i] + val;",
			"	arr[i] = val;",
			"}",
			"int sum(vector<int> &arr, int n, int l, int r){",
			"	int ans = 0;",
			"	int sq = sqrt(n);",
			"	int left = l - (l % sq);",
			"	int right = r - (r % sq);",
			"	int bl = left / sq;",
			"	int br = right / sq;",
			"	for (int i = bl; i < br; i++){",
			"		ans += v[i];",
			"	}",
			"	while (left < l)ans-= arr[left++]; ",
			"	while (right <= r) ans += arr[right++];",
			"	return ans;",
			"}",
			"void pre(vector<int> &arr, int n){",
			"	int sq = sqrt(n);",
			"	int ind = -1;",
			"	for (int i = 0; i < n; i++){",
			"		if (i % sq == 0)ind++;",
			"		v[ind] += arr[i];",
			"	}",
			"}",
		],
		"description": "Log output to console"
	}
}