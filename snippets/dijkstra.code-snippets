{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "cpp",
		"prefix": "dijkstra",
		"body": [
			"set<pair<ll, ll>> st;",
			"for(int i=1;i<=n;i++)st.insert({inf, i});",
			"vector<ll> dis(n + 1, inf);",
			"dis[s] = 0;",
			"st.erase({inf,s});",
			"st.insert({0,s});",
			"while (!st.empty()){",
			"	auto node = *st.begin();",
			"	for (auto it : g[node.second]){",
			"		if (dis[node.second] + it.second < dis[it.first]){",
			"			st.erase({dis[it.first], it.first});",
			"			dis[it.first] = dis[node.second] + it.second;",
			"			st.insert({dis[it.first], it.first});",
			"		}",
			"	}",
			"	st.erase(st.begin());",
			"}",
		],
		"description": "Log output to console"
	}
}